{"version":3,"sources":["Components/Profile/Profile.js","Components/StatisticsItem/StatisticsItem.js","Components/Statistics/Statistics.js","Components/FriendListItem/FriendListItem.js","Components/FriendList/FriendList.js","Components/TransactionItem/TransactionItem.js","Components/TransactionHistory/TransactionHistory.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","StatisticsItem","label","percentage","style","backgroundColor","random_rgba","o","Math","round","r","random","toFixed","Statistics","title","map","item","id","defaultProps","FriendListItem","isOnline","width","FriendList","friends","TransactionItem","type","amount","currency","TransactionHistory","items","ReactDOM","render","StrictMode","user","statisticalData","transactions","document","getElementById"],"mappings":"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","file":"static/js/main.d1644a4a.chunk.js","sourcesContent":["import \"./Profile.css\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt={name} className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import \"./StatisticsItem.css\";\n\nimport React from \"react\";\n\nconst StatisticsItem = ({ label, percentage }) => {\n  return (\n    <li className=\"item\" style={{ backgroundColor: random_rgba() }}>\n      <span className=\"label\">{label}</span>\n      <span className=\"percentage\">{percentage}%</span>\n    </li>\n  );\n};\n\nexport default StatisticsItem;\n\nfunction random_rgba() {\n  var o = Math.round,\n    r = Math.random,\n    s = 255;\n  return (\n    \"rgba(\" +\n    o(r() * s) +\n    \",\" +\n    o(r() * s) +\n    \",\" +\n    o(r() * s) +\n    \",\" +\n    r().toFixed(1) +\n    \")\"\n  );\n}\n","import \"./Statistics.css\";\nimport StatisticsItem from \"../StatisticsItem/StatisticsItem\";\nimport PropTypes from \"prop-types\";\n\nimport React from \"react\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className=\"statistics\">\n      {title ? <h2 className=\"title\">{title}</h2> : null}\n      <ul className=\"stat-list\">\n        {stats.map((item) => (\n          <StatisticsItem\n            key={item.id}\n            label={item.label}\n            percentage={item.percentage}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nStatistics.defaultProps = {\n  title: \"No props\",\n};\n","import \"./FriendListItem.css\";\n\nimport React from \"react\";\n\nconst FriendListItem = ({ name, avatar, isOnline }) => {\n  return (\n    <li className=\"item\">\n      <span className={isOnline ? \"status green\" : \"status\"}></span>\n      <img className=\"friend-avatar\" src={avatar} alt={name} width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n};\n\nexport default FriendListItem;\n","import \"./FriendList.css\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <div className=\"friends\">\n      <ul className=\"friend-list\">\n        {friends.map((item) => {\n          const { id, isOnline, name, avatar } = item;\n          return (\n            <FriendListItem\n              key={id}\n              isOnline={isOnline}\n              name={name}\n              avatar={avatar}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default FriendList;\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import \"./TransactionItem.css\";\n\nimport React from \"react\";\n\nconst TransactionItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nexport default TransactionItem;\n","import \"./TransactionHistory.css\";\nimport TransactionItem from \"../TransactionItem/TransactionItem\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div className=\"transaction\">\n      <table className=\"transaction-history\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => {\n            const { id, type, amount, currency } = item;\n            return (\n              <TransactionItem\n                key={id}\n                type={type}\n                amount={amount}\n                currency={currency}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport FriendList from \"./Components/FriendList/FriendList\";\nimport TransactionHistory from \"./Components/TransactionHistory/TransactionHistory\";\n\nimport \"./index.css\";\nimport user from \"./db/user.json\";\nimport statisticalData from \"./db/statistical-data.json\";\nimport friends from \"./db/friends.json\";\nimport transactions from \"./db/transactions.json\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}